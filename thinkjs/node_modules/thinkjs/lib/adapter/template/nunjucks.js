'use strict';

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

exports.__esModule = true;

var _baseJs = require('./base.js');

var _baseJs2 = _interopRequireDefault(_baseJs);

/**
 * nunjucks template
 * @type {Class}
 */

var _default = (function (_Base) {
  _inherits(_default, _Base);

  function _default() {
    _classCallCheck(this, _default);

    _Base.apply(this, arguments);
  }

  /**
   * run
   * @param  {String} templateFile []
   * @param  {Object} tVar         []
   * @return {Promise}             []
   */

  _default.prototype.run = function run(templateFile, tVar, config) {
    var options, nunjucks, env;
    return _regeneratorRuntime.async(function run$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          options = this.parseConfig({
            autoescape: true,
            watch: false,
            noCache: false,
            throwOnUndefined: false
          }, config);
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(think.npm('nunjucks'));

        case 3:
          nunjucks = context$2$0.sent;
          env = undefined;

          if (options.root_path) {
            env = nunjucks.configure(options.root_path, options);
          } else {
            env = nunjucks.configure(options);
          }

          this.prerender(options, nunjucks, env);

          return context$2$0.abrupt('return', nunjucks.render(templateFile, tVar));

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  };

  return _default;
})(_baseJs2['default']);

exports['default'] = _default;
module.exports = exports['default'];