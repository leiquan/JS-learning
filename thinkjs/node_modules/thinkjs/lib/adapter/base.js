'use strict';

/**
 * think.adapter.base class
 * all adapter will be inherit this class
 */

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

exports.__esModule = true;

var _default = (function (_think$base) {
  _inherits(_default, _think$base);

  function _default() {
    _classCallCheck(this, _default);

    _think$base.apply(this, arguments);
  }

  /**
   * parse config when config has parser function
   * @param  {Object} config []
   * @param  {Object} extra  []
   * @param  {String} type   []
   * @return {Object}        []
   */

  _default.prototype.parseConfig = function parseConfig() {
    var _think;

    return (_think = think).parseConfig.apply(_think, arguments);
  };

  return _default;
})(think.base);

exports['default'] = _default;
module.exports = exports['default'];