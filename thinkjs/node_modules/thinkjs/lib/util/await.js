'use strict';
/**
 * waiting class
 * @type {}
 */

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _Promise = require('babel-runtime/core-js/promise')['default'];

exports.__esModule = true;

var _default = (function () {
  /**
   * constructor
   * @param  {} args []
   * @return {}         []
   */

  function _default() {
    _classCallCheck(this, _default);

    this.init.apply(this, arguments);
  }

  /**
   * init
   * @return {} []
   */

  _default.prototype.init = function init() {
    this.queue = {};
  };

  /**
   * run
   * @param  {String}   key []
   * @param  {Function} fn  []
   * @return {Promise}       []
   */

  _default.prototype.run = function run(key, fn) {
    var _this = this;

    if (!(key in this.queue)) {
      this.queue[key] = [];
      return _Promise.resolve(fn()).then(function (data) {
        process.nextTick(function () {
          _this.queue[key].forEach(function (deferred) {
            return deferred.resolve(data);
          });
          delete _this.queue[key];
        });
        return data;
      })['catch'](function (err) {
        process.nextTick(function () {
          _this.queue[key].forEach(function (deferred) {
            return deferred.reject(err);
          });
          delete _this.queue[key];
        });
        return think.reject(err);
      });
    } else {
      var deferred = think.defer();
      this.queue[key].push(deferred);
      return deferred.promise;
    }
  };

  return _default;
})();

exports['default'] = _default;
module.exports = exports['default'];